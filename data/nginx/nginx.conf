user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    client_max_body_size 30M;
    sendfile on;

    upstream backend {
        server  my-backend:4000;  # Docker 서비스의 이름과 포트
        keepalive 64;
    }

    server {
        listen 80;

        server_name deskdiary.store;
        location / {
            return 301 https://$host$request_uri;
            # return 301 https://deskdiary.store$request_uri;
        }

        location ~ /.well-known/acme-challenge/ {
            allow all;
            root /var/www/certbot/;
        }
    }
    server {
        listen 443 ssl;
        server_name deskdiary.store; # 도메인 이름

        location / {
            proxy_pass http://my-backend:4000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        location /socket.io/ {
            proxy_pass http://my-backend:4000;  # Docker 서비스의 이름과 포트
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        ssl_certificate /etc/letsencrypt/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/privkey.pem;
    }
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;

    
    keepalive_timeout 65;
    include /etc/nginx/conf.d/*.conf;
}
