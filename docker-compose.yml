version: '3.7'

services:
  my-backend:
    # image: app1.0
    image: namhyeonjae/deskdiary-server:latest
    # platform: linux/amd64
    env_file:
      - ./.env
    ports:
      - 4000:3000
    restart: always
    networks:
      - backend
  nginx:
    image: nginx:latest
    restart: always
    volumes:
      - ./data/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    expose:
      - '80'
      - '443'
    networks:
      - backend
    depends_on:
      - my-backend
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''

  certbot: # certbot 서비스 추가
    image: certbot/certbot
    container_name: certbot_service
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    networks:
      - backend
    depends_on:
      - nginx
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
networks:
  backend:
    driver: bridge
# # docker-comose.yaml

# version: '3.7'

# # 컴퓨터들
# services:
#   my-backend:
#     image: namhyeonjae/deskdiary-server:latest
#     platform: linux/amd64
#     env_file:
#       - ./.env
#     ports:
#       - 4000:3000
#     restart: always
#     networks:
#       - backend

#   # 컴퓨터이름
#   nginx:
#     image: nginx:latest
#     restart: unless-stopped
#     volumes:
#       - ./conf/nginx.conf:/etc/nginx/nginx.conf
#       - ./data/certbot/conf:/etc/letsencrypt
#       - ./data/certbot/www:/var/www/certbot
#     ports:
#       - 80:80
#       - 443:443
#     networks:
#       - backend
#     depends_on:
#       - my-backend

#   certbot:
#     image: certbot/certbot
#     restart: 'no'
#     volumes:
#       - ./data/certbot/conf:/etc/letsencrypt
#       - ./data/certbot/www:/var/www/certbot
# # 추가된 내용
# networks:
#   backend:
